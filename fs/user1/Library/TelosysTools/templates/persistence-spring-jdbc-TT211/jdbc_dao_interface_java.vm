/*
 * Created on $today.date ( Time $today.time )
 * Generated by $generator.name ( version $generator.version )
 */
##--------------------------------------------------------------------------------------------------------
#set( $uncapitalizedEntityName = $fn.uncapitalize($entity.name) )
#set( $jdbc = $jdbcFactory.getInstance($entity) )
##--------------------------------------------------------------------------------------------------------
package ${target.javaPackageFromFolder($SRC)};

import ${ENTITY_PKG}.${entity.name};

/**
 * ${entity.name} DAO interface
 * 
 * @author Telosys Tools
 */
public interface ${entity.name}DAO {

	//----------------------------------------------------------------------
	/**
	 * Finds a bean by its primary key 
#foreach( $attribute in $jdbc.attributesForPrimaryKey )
	 * @param ${attribute.name}
#end
	 * @return the bean found or null if not found 
	 */
	public ${entity.name} find( $fn.argumentsListWithType( $jdbc.attributesForPrimaryKey ) ) ;

	//----------------------------------------------------------------------
	/**
	 * Loads the given bean, it is supposed to contains the primary key value(s) in its attribute(s)<br>
	 * If found, the given instance is populated with the values retrieved from the database<br>
	 * If not found, the given instance remains unchanged
	 * @param ${uncapitalizedEntityName}
	 * @return true if found, false if not found
	 */
	public boolean load( ${entity.name} ${uncapitalizedEntityName} ) ;
	
    //----------------------------------------------------------------------
	/**
	 * Inserts the given bean in the database 
	 * @param ${uncapitalizedEntityName}
#if ( $entity.hasAutoIncrementedKey() )
	 * @return the generated value for the auto-incremented column
#end
	 */
#if ( $entity.hasAutoIncrementedKey() )
	public $entity.autoincrementedKeyAttribute.type insert(${entity.name} ${uncapitalizedEntityName}) ;
#else
	public void insert(${entity.name} ${uncapitalizedEntityName}) ;
#end

#if ( $entity.nonKeyAttributesCount > 0 )
    //----------------------------------------------------------------------
	/**
	 * Updates the given bean in the database 
	 * @param ${uncapitalizedEntityName}
	 * @return
	 */
	public int update(${entity.name} ${uncapitalizedEntityName}) ;
#end

    //----------------------------------------------------------------------
	/**
	 * Deletes the record in the database using the given primary key value(s) 
#foreach( $attribute in $jdbc.attributesForPrimaryKey )
	 * @param ${attribute.name}
#end
	 * @return
	 */
	public int delete( $fn.argumentsListWithType( $jdbc.attributesForPrimaryKey ) ) ;

    //----------------------------------------------------------------------
	/**
	 * Deletes the given bean in the database 
	 * @param ${uncapitalizedEntityName}
	 * @return
	 */
	public int delete( ${entity.name} ${uncapitalizedEntityName} ) ;

    //----------------------------------------------------------------------
	/**
	 * Checks the existence of a record in the database using the given primary key value(s)
#foreach( $attribute in $jdbc.attributesForPrimaryKey )
	 * @param ${attribute.name}
#end
	 * @return
	 */
	public boolean exists( $fn.argumentsListWithType( $jdbc.attributesForPrimaryKey ) ) ;

	//----------------------------------------------------------------------
	/**
	 * Checks the existence of the given bean in the database 
	 * @param ${uncapitalizedEntityName}
	 * @return
	 */
	public boolean exists( ${entity.name} ${uncapitalizedEntityName} ) ;

    //----------------------------------------------------------------------
	/**
	 * Counts all the records present in the database table
	 * @return
	 */
	public long count() ;

}
