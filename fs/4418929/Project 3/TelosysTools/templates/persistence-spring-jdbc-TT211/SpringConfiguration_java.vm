/*
 * Created on $today.date ( Time $today.time )
 * Generated by $generator.name ( version $generator.version )
 */
package ${target.javaPackageFromFolder($SRC)};

import javax.sql.DataSource;

import org.apache.commons.dbcp.BasicDataSource;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.ComponentScan;
import org.springframework.context.annotation.Configuration;
import org.springframework.context.annotation.PropertySource;
import org.springframework.core.env.Environment;

/**
 * 
 * Spring configuration class (replaces the "context.xml" spring file)
 *
 * @author Telosys Tools
 * 
 */
@Configuration
@ComponentScan(basePackages={"org.demo.dao.commons", "org.demo.dao.impl.spring"} ) // Packages where to search the components
@PropertySource("classpath:jdbc.properties") // Properties file name to be loaded
public class SpringConfiguration {

	@Autowired
	Environment env ; // Spring environment with the properties loaded from 'PropertySource'
	
	public SpringConfiguration() {
		System.out.println("Constructor " + this.getClass().getCanonicalName() );
	}

	/**
	 * Provides the bean named "dataSource" ( for Resource(name="dataSource") injection )
	 * @return
	 */
	@Bean
	public DataSource dataSource() { 
		// Creates a DBCP Connection Pool with the properties defined in the "jdbc.properties" file
		BasicDataSource ds = new BasicDataSource();
		ds.setDriverClassName(env.getProperty("jdbc.driverClassName"));
		ds.setUrl(env.getProperty("jdbc.url"));
		ds.setUsername(env.getProperty("jdbc.username"));
		ds.setPassword(env.getProperty("jdbc.password"));
		return ds ;
	}
}
